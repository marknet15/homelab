---
- name: Apt Upgrade Hosts
  hosts: all
  serial: "{{ serial_hosts | default(4) }}"
  max_fail_percentage: 25
  tasks:
    - name: "Send Slack notification"
      community.general.slack:
        token: "{{ slack_token }}"
        msg: System update event
        attachments:
          - text: Initiating upgrade of all apt packages
            color: warning
            title: System packages upgrade
      delegate_to: localhost
      run_once: yes
      when:
        - slack_token is defined

    - name: Update apt-cache
      ansible.builtin.apt:
        update_cache: yes
      become: yes

    - name: Run apt dist-upgrade
      ansible.builtin.apt:
        upgrade: dist
        autoclean: yes
      become: yes
      register: output

    - name: Show apt dist-upgrade results
      ansible.builtin.debug:
        msg: "{{ output.stdout_lines }}"

    - name: Reboot host
      ansible.builtin.reboot:
        msg: "Rebooting host to complete updates"
      become: yes
      when:
        - reboot_enabled | default(false) | bool

    - name: "Wait for host to boot up"
      wait_for:
        host: "{{ ansible_host }}"
        search_regex: OpenSSH
        port: 22
        delay: 1
        timeout: 300
      connection: local
      when:
        - reboot_enabled | default(false) | bool

    - name: Check host uptime
      ansible.builtin.command: uptime
      changed_when: false
      register: output

    - name: Show host uptime
      ansible.builtin.debug:
        msg: "{{ output.stdout_lines }}"

    # Clean old packages from hosts
    - name: Remove un-used packages
      ansible.builtin.apt:
        autoremove: yes
      become: yes
      register: output

    - name: Show package cleaning results
      ansible.builtin.debug:
        msg: "{{ output.stdout_lines }}"
